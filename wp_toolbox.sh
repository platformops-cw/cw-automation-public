#!/bin/bash

#------AUTHOR: Ahmad Sami------#

clear

#------variables used------#
S="================================================"
D="------------------------------------------------"

HOME="/home/master"
DATE=$(date "+%Y-%m-%d %H:%M:")
mkdir -p $HOME/tmp_cw_scanner
FLAG_FILE=$HOME/tmp_cw_scanner/flag_file_autogenerated
FLAG_FILE_Wp_rocket=$HOME/tmp_cw_scanner/flag_file_autogenerated_wpr


GCOLOR="\e[92m ------ OK/HEALTHY \e[0m"
WCOLOR="\e[93m ------ WARNING \e[0m"
CCOLOR="\e[91m ------ CRITICAL \e[0m"
EndCOLOR="\e[0m"
UYel='\e[4;33m';
BIGre='\e[1;92m';
BIRed='\e[1;91m';
BBlu='\e[1;34m';
BPur='\e[1;35m';
BCya='\e[1;36m';
BWhi='\e[1;37m';
red=$'\e[1;31m'
grn=$'\e[1;32m'
yel=$'\e[1;33m'
blu=$'\e[1;34m'
mag=$'\e[1;35m'
cyn=$'\e[1;36m'
end=$'\e[0m'


file_domain=file-DOMAINNAME
read -r -p $'\e[0;32m Enter the Website Domain name\e[0m: '  RAW_DOMAINNAME
URL_DOMAIN=$(curl -Ls -k -o /dev/null -w %{url_effective} $RAW_DOMAINNAME)
DOMAINNAME=$(echo "$RAW_DOMAINNAME" | sed -e 's|^[^/]*//||' -e 's|/.*$||')
APP_NAME=$(grep -lr $DOMAINNAME /home/master/applications/*/conf/server.nginx)
APP_NAME=$(basename $(dirname $(dirname $APP_NAME)))
APP_TYPE=$(awk '{sub(/-.*/, ""); print}' $HOME/applications/$APP_NAME/conf/server.nginx | grep -v "Domain_alias" | sed -r '/^\s*$/d' | cut -f 3 -d ' ')
HOMEDIR=$HOME/applications/$APP_NAME/public_html/
[ -z "$APP_TYPE" ] && APP_TYPE=$(awk '{sub(/-.*/, ""); print}' $HOME/applications/$APP_NAME/conf/server.nginx | grep -v "Domain_alias" | sed -r '/^\s*$/d' | cut -f 6 -d ' ')

if [[ ! $APP_TYPE =~ ^(wordpress|woocommerce|wordpressmu)$ ]]; then 
  echo "app is not WP type."
fi

##############################################################--STARTING FUNCTIONS Declaration--##################################################################################################

MAIN_HEADING () {

    echo -e "\t${1} ${2}"
}

SUB_HEADING () {

    echo -e "$BCya${1} $EndCOLOR"
    
}

TAG_HEADING () {

        echo -e "$BIRed${1} $EndCOLOR"
       
}

BREAK_LINE () {

    echo ""
}

STAR_BREAK_LONG () {

    echo -e "$BBlu${S}${S} $EndCOLOR"
}

DASH_BREAK_LONG () {

    echo $D$D
}

STAR_BREAK_SHORT () {

    echo $S
}

DASH_BREAK_SHORT () {

    echo $D
}


CPU_USAGE () {
    BREAK_LINE
    CPU_USAGE=$(top -b -n2 -p 1 | fgrep "Cpu(s)" | tail -1 | awk -F'id,' -v prefix="$prefix" '{ split($1, vs, ","); v=vs[length(vs)]; sub("%", "", v); printf "%s%.1f%%\n", prefix, 100 - v }')

     
     echo -e "( 0-80% = OK/HEALTHY,  80-90% = WARNING,  90-100% = CRITICAL )"
     echo -e "$D-----------------"
     COLC1=$(echo "$CPU_USAGE" | tr -d '%')
     COLC2=$(echo "$COLC1" | printf "%.0f" "$COLC1")
    for i in $(echo "$COLC2"); do
        {
            if [[ $i = *[[:digit:]]* ]]; then
            {
            if [ $i -ge 90 ]; then
            COLC3="$(echo -e $i"% $CCOLOR\n$COLC3")"
            elif [[ $i -ge 80 && $i -lt 90 ]]; then
                COLC3="$(echo -e $i"% $WCOLOR\n$COLC3")"
            else
                COLC3="$(echo -e $i"% $GCOLOR\n$COLC3")"
            fi
            }
            else
                COLC3="$(echo -e $i"% (Free CPU Percentage details not available)\n$COLC3")"
            fi
        }
    done
     COLC3=$(echo "$COLC3"|sort -k1n)
     echo -e "\nCurrent CPU Utilization % :\n"
     paste  <(echo "$COLC2") <(echo "$COLC3") -d' '|column -t
     BREAK_LINE
}


WP_DOCTOR () {

    BREAK_LINE

    if  [[ ! -f "$FLAG_FILE" ]]; then
                echo "Installing Wp-DOCTOR"
                wp package install wp-cli/doctor-command
                touch $FLAG_FILE
    fi

    cd $HOMEDIR && wp doctor check core-verify-checksums autoload-options-size cron-duplicates cron-count plugin-deactivated cache-flush php-in-upload --skip-plugins --spotlight
    BREAK_LINE

}


DB_OPTIMIZATION () {

    BREAK_LINE

    echo "DB Optimizations"
            cd $HOMEDIR && wp plugin is-installed wp-sweep

            if [ $? = "1" ]; then

                STAR_BREAK_SHORT
                cd $HOMEDIR 

                wp plugin deactivate wp-sweep  --quiet
                wp plugin uninstall wp-sweep  --quiet
                wp plugin install wp-sweep  --quiet
                wp plugin activate wp-sweep --quiet
                wp sweep spam_comments deleted_comments unused_terms optimize_database duplicated_postmeta duplicated_commentmeta duplicated_usermeta  duplicated_termmeta transient_options orphan_postmeta orphan_commentmeta orphan_usermeta orphan_termmeta orphan_term_relationships
                wp plugin deactivate wp-sweep --quiet
                wp plugin uninstall wp-sweep --quiet
                STAR_BREAK_SHORT
                BREAK_LINE
            else
                STAR_BREAK_SHORT
                wp plugin activate wp-sweep --quiet
                wp sweep spam_comments deleted_comments unused_terms optimize_database duplicated_postmeta duplicated_commentmeta duplicated_usermeta  duplicated_termmeta transient_options orphan_postmeta orphan_commentmeta orphan_usermeta orphan_termmeta orphan_term_relationships
                STAR_BREAK_SHORT
                BREAK_LINE
            fi
            

}


IMAGE_OPTIMIZATION () {

            BREAK_LINE
            echo "Image compression"
            cd $HOMEDIR/wp-content/uploads/
            nice -n 19 find . -iname '*.jpg' -print0 | xargs -0 jpegoptim --max=82 --all-progressive --strip-all --preserve --totals --force
            nice -n 19 find . -iname '*.jpeg' -print0 | xargs -0 jpegoptim --max=82 --all-progressive --strip-all --preserve --totals --force
            nice -n 19 find . -iname '*.png' -print0 | xargs -0 optipng -o7 -preserve
            BREAK_LINE
}

CACHE_CONFIGURATION () {
                BREAK_LINE

                if [[ $APP_TYPE == "wordpress" ||  $APP_TYPE == "wordpressmu" || $APP_TYPE == "woocommerce" ]]; then

                if  [[ -f "$HOME/applications/$APP_NAME/public_html/wp-content/advanced-cache.php" ]]; then

                    if grep -q "breeze"  $HOME/applications/$APP_NAME/public_html/wp-content/advanced-cache.php
        
                    then
                        CACHE_PLUGIN=Breeze
                        echo $CACHE_PLUGIN
                    elif 
                        grep -q "w3-total-cache"  $HOME/applications/$APP_NAME/public_html/wp-content/advanced-cache.php 
                    then
                        CACHE_PLUGIN=w3-total-cache
            
                        wget https://raw.githubusercontent.com/platformops-cw/cw-automation-scripts/main/cw-w3-tc.json
                        wp w3-total-cache import cw-w3-tc.json

            elif grep -q "wp-rocket"  $HOME/applications/$APP_NAME/public_html/wp-content/advanced-cache.php 
                then
                    if  [[ ! -f "$FLAG_FILE_Wp_rocket" ]]; then
                    echo "Installing Wp-ROCKET-cli"
                    wp package install wp-media/wp-rocket-cli
                    touch $FLAG_FILE_Wp_rocket
                    fi
            
                    CACHE_PLUGIN=wp-rocket
                    wp rocket export
                    wget https://raw.githubusercontent.com/platformops-cw/cw-automation-scripts/main/cw-wp-rocket.json
                    wp rocket import --file=cw-wp-rocket.json

                else

                    echo -e "WP CACHE PLUGIN:$BIGre  ------ Different Cache plugin is being used, Plesae check /wp-content/advanced-cache.php file to know the name of the plugin and review the settings from it's KB or install Breeze on it. $EndCOLOR"
    
            fi
                else

                    echo -e "WP CACHE PLUGIN:$BIRed  ------ No Cache plugin is being used. Please take a help from senior $EndCOLOR" 
            fi

                else

                    echo -e "WP CACHE PLUGIN:$BIRed  ------ It isn't a WP family $EndCOLOR"

            fi
            BREAK_LINE
}


CRON_COUNT () {
            BREAK_LINE
            cd $HOMEDIR
            dbprefix=$(cat wp-config.php | grep "\$table_prefix" | cut -d \' -f 2)
            wp db query "UPDATE ${dbprefix}options SET option_value = '' WHERE option_name = 'cron'"
            echo "Cron Count has been reduced"
            BREAK_LINE
}



##############################################################--ENDING FUNCTIONS Declaration--##################################################################################################

##############################################################--Starting WP-ANALYZER----------###################################################################################################

STAR_BREAK_LONG
MAIN_HEADING "WP SCANNER REPORT FOR" "$UYel$DOMAINNAME $EndCOLOR"
STAR_BREAK_LONG
BREAK_LINE


SUB_HEADING "CHECKING CPU USAGE"
DASH_BREAK_SHORT


CPU_USAGE


SUB_HEADING "WP DOCTOR IS CHECKING THE SITE'S HEALTH"
DASH_BREAK_SHORT


WP_DOCTOR


STAR_BREAK_LONG
MAIN_HEADING "WP OPTIMIZER FOR" "$UYel$DOMAINNAME $EndCOLOR"
STAR_BREAK_LONG
BREAK_LINE





#PS3='Please enter your choice: '


while true; do
    read -p "Do you wish to Optimize this Site (yes/no) ? " yn
    case $yn in
        [Yy]* ) 
            BREAK_LINE
            TAG_HEADING "Here is the list of OPTIMIZATIONS you can perform"
            BREAK_LINE
            PS3="$(printf  "\n${grn}Please enter your choice:${end}")"
            options=("Optimize Wp Cron Count" "DB Optimization" "Image Compression" "Optimize Autloaded Data" "Cache Plugin Configurations" "Verification" "Quit")
            echo ""
            echo ""
            select opt in "${options[@]}"
            
            do
                case $opt in
                    "Optimize Wp Cron Count")
            
                        CRON_COUNT
            
                        ;;
            
                    "DB Optimization")
            
                    DB_OPTIMIZATION
            
                        ;;
            
                    "Image Compression")
            
                    IMAGE_OPTIMIZATION
            
                        ;;
            
                    "Optimize Autloaded Data")
                        
                        echo "you chose choice $REPLY which is $opt"
                        
                        ;;
            
                    "Cache Plugin Configurations")
                        
                        CACHE_CONFIGURATION
            
                        ;;
            
                    "Verification")
                        
                        WP_DOCTOR
            
                        ;;
            
                    "Quit")
                        break
                        ;;
                    *) echo "invalid option $REPLY";;
                esac
            done
           
            ;;
        [Nn]* )

         exit
         ;;
        
        * ) echo "Please answer yes or no.";;
    esac
done






